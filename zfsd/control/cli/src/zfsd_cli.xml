<?xml version="1.0"?>

<!--
    Copyright (c) 2016 Ales Snuparek

    All rights reserved.

    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

        * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
        * Neither the name of the CLI library project nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<!--
http://alexis.royer.free.fr/CLI/user-guide/cli-user-guide.html

// output
<cpp><out/> << "Hello world!" << cli::endl;</cpp>

// params
type
	string
	int
	float
	host
	

<keyword string="int">
<param type="int" id="an-int">
<endl>
<cpp><out/> << <value-of param="an-int"/> << cli::endl;</cpp>
</endl>
</param>
</keyword>

-->

<cli xmlns="http://alexis.royer.free.fr/CLI" name="ZFSD_CLI">
<cpp option="include">#include "zfsd_cli_impl.h"</cpp>
<!-- zlomekFS cli implementation -->
<keyword string="zfsd"><help lang="en">Get or set zlomekFS daemon setings.</help>
	<keyword string="logLevel"><help lang="en">Get or set zlomekFS log level.</help>
		<keyword string="get"><help lang="en">Get zlomekFS log loglevel.</help>
			<endl><cpp>zlomekfs_get_log_level(<out/>);</cpp></endl>
		</keyword>
		<keyword string="set"><help lang="en">Set zlomekFS log level.</help>
			<param type="int" id="level">
			<endl><cpp>zlomekfs_set_log_level(<out/>, <value-of param="level"/>);</cpp></endl>
			</param>
		</keyword>
	</keyword>

	<keyword string="connection"><help lang="en">Modify zlomekFS connection speed.</help>
		<keyword string="get"><help lang="en">Get zlomekFS forced connection speed.</help>
			<endl><cpp>zlomekfs_get_connection_speed(<out/>);</cpp></endl>
		</keyword>

		<keyword string="set"><help lang="en">Set zlomekFS connection speed.</help>
			<keyword string="none">
				<endl><cpp>zlomekfs_set_connection_speed(<out/>, CONNECTION_SPEED_NONE);</cpp></endl>
			</keyword>
			<keyword string="slow">
				<endl><cpp>zlomekfs_set_connection_speed(<out/>, CONNECTION_SPEED_SLOW);</cpp></endl>
			</keyword>
			<keyword string="fast">
				<endl><cpp>zlomekfs_set_connection_speed(<out/>, CONNECTION_SPEED_FAST);</cpp></endl>
			</keyword>
			<keyword string="default">
				<endl><cpp>zlomekfs_force_connection_speed(<out/>, false);</cpp></endl>
			</keyword>
		</keyword>
	</keyword>

	<keyword string="configuration"><help lang="en">Print zlomekFS configuration.</help>
		<keyword string="volumes"><help lang="en">Get volumes information.</help>
			<endl><cpp>zlomekfs_print_volumes(<out/>);</cpp></endl>
		</keyword>
		<keyword string="nodes"><help lang="en">Get nodes information.</help>
			<endl><cpp>zlomekfs_print_nodes(<out/>);</cpp></endl>
		</keyword>
		<keyword string="zfs_config"><help lang="en">Print zfs_config.</help>
			<endl><cpp>zlomekfs_print_zfs_config(<out/>);</cpp></endl>
		</keyword>
		<keyword string="internal_fd"><help lang="en">Print internal_fd.</help>
			<endl><cpp>zlomekfs_print_internal_fds(<out/>);</cpp></endl>
		</keyword>
		<keyword string="internal_fh"><help lang="en">Print internal_fh.</help>
			<endl><cpp>zlomekfs_print_internal_fhs(<out/>);</cpp></endl>
		</keyword>
	</keyword>

	<keyword string="terminate"><help lang="en">Stop zlomekFS daemon.</help>
		<endl><cpp> zlomekfs_terminate(); </cpp></endl>
	</keyword>

</keyword>


<keyword string="state"><help lang="en">Get zlomekFS state.</help>
	<keyword string="get"><help lang="en">Just say hello.</help>
		<endl><cpp>sayHello(<out/>);</cpp></endl>
	</keyword>
	<keyword string="set"><help lang="en">Say goodbye.</help>
		<endl><cpp>sayBye(<out/>);</cpp></endl>
	</keyword>
</keyword>

<!-- types -->

<keyword string="enter">
	<keyword string="string">
		<param type="string" id="a-string">
		<endl>
			<cpp><out/> &lt;&lt; <value-of param="a-string"/> &lt;&lt; cli::endl;</cpp>
		</endl>
		</param>
	</keyword>
	<keyword string="int">
		<param type="int" id="an-int">
		<endl>
			<cpp><out/> &lt;&lt; <value-of param="an-int"/> &lt;&lt; cli::endl;</cpp>
		</endl>
		</param>
	</keyword>
	<keyword string="float">
		<param type="float" id="a-float">
		<endl>
			<cpp><out/> &lt;&lt; <value-of param="a-float"/> &lt;&lt; cli::endl;</cpp>
		</endl>
		</param>
	</keyword>
	<keyword string="host">
		<param type="host" id="a-host">
		<endl>
			<cpp><out/> &lt;&lt; <value-of param="a-host"/> &lt;&lt; cli::endl;</cpp>
		</endl>
		</param>
	</keyword>
</keyword>

</cli>
